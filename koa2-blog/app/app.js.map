{"version":3,"sources":["../src/app.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;;AAGA,a;AACA,4B;AACA,0B;AACA,uC;AACA,4B;AACA,qC;AACA,yC;AACA,mC;AACA,+C;AACA,uC;AACA,gD;AACA,yC;AACA,wD;;;;;;;AAOA,2C;;;;AAIA,kD,8FATA,U,CAEA;AACA;AAQA,IAAM,MAAM,mBAAZ,C,CAJA;;AAMA,IAAI,gBAAgB,wBAAW;AAC7B,UAAQ,MADqB,EAAX,CAApB;;;AAIA,IAAI,iBAAiB,yBAArB;;AAEA;AACG,GADH,CACO,0BAAQ,6BAAU,eAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,CAAV,EAA0C;AACrD,cAAY,EADyC,EAA1C,CAAR,CADP;AAGO;AAHP,CAIG,GAJH,CAIO,0BAAQ,8BAAR,CAJP,EAI8B;AAJ9B,CAKG,GALH,CAKO,0BAAQ,wBAAR,CALP;AAMG,GANH,CAMO,0BAAQ,0BAAR,CANP,EAM0B;AAN1B,CAOG,GAPH,CAOO,yBAPP,E,CAOoB;;AAEpB;AACA,IAAI,GAAJ,CAAQ,wBAAM,eAAK,IAAL,CAAU,SAAV,EAAqB,UAArB,CAAN,EAAwC;AAC9C,aAAW,MADmC,EAAxC,CAAR;;;AAIA;AACA,0BAAW,GAAX,EAAgB;AACd,YAAU,gBADI,EAAhB;;;AAIA;AACA,IAAI,GAAJ,oFAAQ,iBAAM,GAAN,EAAW,IAAX;AACA,iBADA,GACQ,IAAI,IAAJ,EADR;AAEA,oBAFA;AAGA,cAHA,GAGK,IAAI,IAAJ,KAAa,KAHlB;AAIN,oBAAQ,GAAR,CAAe,IAAI,MAAnB,SAA6B,IAAI,GAAjC,WAA0C,EAA1C,SAJM,mEAAR;;;AAOA;AACA,IAAI,GAAJ,CAAQ,cAAc,MAAd,EAAR,EAAgC,cAAc,cAAd,EAAhC;;AAEA;AACA;AACA;;;AAGA,uBAAc,aAAd;AACE;;AAEF;AACA,IAAI,GAAJ,qFAAQ,kBAAM,GAAN;AACN,gBAAI,MAAJ,GAAa,GAAb,CADM;AAEA,kBAAI,MAAJ,CAAW,KAAX,CAFA,uEAAR;;;AAKA;AACA,IAAI,EAAJ,CAAO,OAAP,sFAAgB,kBAAM,GAAN,EAAW,GAAX;AACd,oBAAQ,GAAR,CAAY,gBAAZ,EAA8B,GAA9B,EADc,qEAAhB;;;AAIA,IAAM,OAAO,SAAS,MAAT,CAAb;AACA,IAAM,SAAS,eAAK,YAAL,CAAkB,IAAI,QAAJ,EAAlB,CAAf;;AAEA,OAAO,MAAP,CAAc,IAAd;AACA,OAAO,EAAP,CAAU,OAAV,EAAmB,UAAC,KAAD,EAAW;AAC5B,MAAI,MAAM,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAM,KAAN;AACD;AACD;AACA,UAAQ,MAAM,IAAd;AACE,SAAK,QAAL;AACE,cAAQ,KAAR,CAAc,OAAO,+BAArB;AACA,cAAQ,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACE,cAAQ,KAAR,CAAc,OAAO,oBAArB;AACA,cAAQ,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAM,KAAN,CAVJ;;AAYD,CAjBD;AAkBA,OAAO,EAAP,CAAU,WAAV,EAAuB,YAAM;AAC3B,UAAQ,GAAR,CAAY,uBAAZ,EAAqC,IAArC;AACD,CAFD,E;;AAIe,G","file":"app.js","sourcesContent":["/*\r\n * @Author: fengyun2\r\n * @Date:   2016-07-16 19:39:57\r\n * @Last Modified by:   fengyun2\r\n * @Last Modified time: 2016-07-21 13:26:25\r\n */\r\n\r\n/**\r\n * 主入口文件\r\n */\r\n'use strict'\r\nimport http from 'http'\r\nimport Koa from 'koa'\r\nimport Router from 'koa-router'\r\nimport path from 'path'\r\nimport views from 'koa-views'\r\nimport convert from 'koa-convert'\r\nimport json from 'koa-json'\r\nimport bodyParser from 'koa-bodyparser'\r\nimport logger from 'koa-logger'\r\nimport koaStatic from 'koa-static-plus'\r\nimport koaOnError from 'koa-onerror'\r\nimport session from 'koa-generic-session'\r\n\r\n/*引入路由文件*/\r\n\r\n// import index from './routes/index'\r\n// import users from './routes/users'\r\n\r\nimport backendRoutes from './routes/backend'\r\n\r\n// import frontendRoutes from './routes/frontend'\r\n\r\nimport { response } from './middlewares/response'\r\n\r\nconst app = new Koa()\r\n\r\nlet backendRouter = new Router({\r\n  prefix: \"/api\"\r\n});\r\n\r\nlet frontendRouter = new Router();\r\n\r\napp\r\n  .use(convert(koaStatic(path.join(__dirname, 'public'), {\r\n    pathPrefix: ''\r\n  }))) // 静态文件指定中间件\r\n  .use(convert(bodyParser())) // post请求解析中间件\r\n  .use(convert(json()))\r\n  .use(convert(logger())) // 日志中间件\r\n  .use(response())  // 定制报文格式\r\n\r\n// views\r\napp.use(views(path.join(__dirname, '../views'), {\r\n  extension: 'html'\r\n}))\r\n\r\n// 500 error\r\nkoaOnError(app, {\r\n  template: 'views/500.html'\r\n})\r\n\r\n// logger\r\napp.use(async(ctx, next) => {\r\n  const start = new Date()\r\n  await next()\r\n  const ms = new Date() - start\r\n  console.log(`${ctx.method} ${ctx.url} - ${ms}ms`)\r\n})\r\n\r\n// 路由中间件\r\napp.use(backendRouter.routes(), backendRouter.allowedMethods())\r\n\r\n// router config\r\n// router.use('/', index.routes())\r\n// router.use('/users', users.routes())\r\n\r\n\r\nbackendRoutes(backendRouter)\r\n  // frontendRoutes(frontendRouter)\r\n\r\n// 404\r\napp.use(async(ctx) => {\r\n  ctx.status = 404\r\n  await ctx.render('404')\r\n})\r\n\r\n// error logger\r\napp.on('error', async(err, ctx) => {\r\n  console.log('error occured:', err)\r\n})\r\n\r\nconst port = parseInt('3000')\r\nconst server = http.createServer(app.callback())\r\n\r\nserver.listen(port)\r\nserver.on('error', (error) => {\r\n  if (error.syscall !== 'listen') {\r\n    throw error\r\n  }\r\n  // handle specific listen errors with friendly messages\r\n  switch (error.code) {\r\n    case 'EACCES':\r\n      console.error(port + ' requires elevated privileges')\r\n      process.exit(1)\r\n      break\r\n    case 'EADDRINUSE':\r\n      console.error(port + ' is already in use')\r\n      process.exit(1)\r\n      break\r\n    default:\r\n      throw error\r\n  }\r\n})\r\nserver.on('listening', () => {\r\n  console.log('Listening on port: %d', port)\r\n})\r\n\r\nexport default app\r\n"]}