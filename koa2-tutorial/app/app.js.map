{"version":3,"sources":["../src/app.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;;AAGA,a;AACA,4B;AACA,0B;AACA,uC;AACA,4B;AACA,qC;AACA,yC;AACA,mC;AACA,+C;AACA,uC;AACA,gD;AACA,yC;;;;;;;;AAQA,uC;AACA,uC,0IANA,IAAM,MAAM,mBAAZ,CACA,IAAM,SAAS,yBAAf,CAEA;;AAKA;AACC,GADD,CACK,0BAAQ,8BAAR,CADL,CAC6B;AAD7B,CAEC,GAFD,CAEK,0BAAQ,wBAAR,CAFL;AAGC,GAHD,CAGK,0BAAQ,0BAAR,CAHL,CAGwB;AACxB;AACA;AALA,CAMC,GAND,CAMK,0BAAQ,6BAAU,eAAK,IAAL,CAAU,SAAV,EAAoB,QAApB,CAAV,EAAwC;AACnD,cAAY,EADuC,EAAxC,CAAR,CANL;AAQK;;AAEL;AACA,IAAI,GAAJ,CAAQ,wBAAM,eAAK,IAAL,CAAU,SAAV,EAAqB,UAArB,CAAN,EAAwC;AAC9C,aAAW,MADmC,EAAxC,CAAR;;;AAIA;AACA,0BAAW,GAAX,EAAgB;AACd,YAAU,gBADI,EAAhB;;;AAIA;AACA,IAAI,GAAJ,oFAAQ,iBAAO,GAAP,EAAY,IAAZ;AACA,SADA;;AAGA,MAHA,0HACA,KADA,GACQ,IAAI,IAAJ,EADR,0BAEA,MAFA,QAGA,EAHA,GAGK,IAAI,IAAJ,KAAa,KAHlB;AAIN,oBAAQ,GAAR,CAAe,IAAI,MAAnB,SAA6B,IAAI,GAAjC,WAA0C,EAA1C,SAJM,mEAAR;;;AAOA,IAAI,GAAJ,CAAQ,OAAO,MAAP,EAAR,EAAyB,OAAO,cAAP,EAAzB;;AAEA;AACA,OAAO,GAAP,CAAW,GAAX,EAAgB,gBAAM,MAAN,EAAhB;AACA,OAAO,GAAP,CAAW,QAAX,EAAqB,gBAAM,MAAN,EAArB;;AAEA;AACA;;;;;;AAMA;AACA,IAAI,GAAJ,qFAAQ,kBAAO,GAAP;AACN,gBAAI,MAAJ,GAAa,GAAb,CADM;AAEA,kBAAI,MAAJ,CAAW,KAAX,CAFA,uEAAR;;;AAKA;AACA,IAAI,EAAJ,CAAO,OAAP,sFAAgB,kBAAO,GAAP,EAAY,GAAZ;AACd,oBAAQ,GAAR,CAAY,gBAAZ,EAA8B,GAA9B,EADc,qEAAhB;;;AAIA,IAAM,OAAO,SAAS,MAAT,CAAb;AACA,IAAM,SAAS,eAAK,YAAL,CAAkB,IAAI,QAAJ,EAAlB,CAAf;;AAEA,OAAO,MAAP,CAAc,IAAd;AACA,OAAO,EAAP,CAAU,OAAV,EAAmB,UAAC,KAAD,EAAW;AAC5B,MAAI,MAAM,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAM,KAAN;AACD;AACD;AACA,UAAQ,MAAM,IAAd;AACE,SAAK,QAAL;AACE,cAAQ,KAAR,CAAc,OAAO,+BAArB;AACA,cAAQ,IAAR,CAAa,CAAb;AACA;AACF,SAAK,YAAL;AACE,cAAQ,KAAR,CAAc,OAAO,oBAArB;AACA,cAAQ,IAAR,CAAa,CAAb;AACA;AACF;AACE,YAAM,KAAN,CAVJ;;AAYD,CAjBD;AAkBA,OAAO,EAAP,CAAU,WAAV,EAAuB,YAAM;AAC3B,UAAQ,GAAR,CAAY,uBAAZ,EAAqC,IAArC;AACD,CAFD,E;;AAIe,G","file":"app.js","sourcesContent":["/*\n* @Author: fengyun2\n* @Date:   2016-07-16 19:39:57\n* @Last Modified by:   fengyun2\n* @Last Modified time: 2016-07-18 00:16:31\n*/\n\n/**\n * 主入口文件\n */\n'use strict'\nimport http from 'http'\nimport Koa from 'koa'\nimport Router from 'koa-router'\nimport path from 'path'\nimport views from 'koa-views'\nimport convert from 'koa-convert'\nimport json from 'koa-json'\nimport bodyParser from 'koa-bodyparser'\nimport logger from 'koa-logger'\nimport koaStatic from 'koa-static-plus'\nimport koaOnError from 'koa-onerror'\n\n\nconst app = new Koa()\nconst router = new Router()\n\n/*引入路由文件*/\n\nimport index from './routes/index'\nimport users from './routes/users'\n\napp\n.use(convert(bodyParser()))  // post请求解析中间件\n.use(convert(json()))\n.use(convert(logger())) // 日志中间件\n// .use(router.routes()) // 路由中间件\n// .use(router.allowedMethods()) // 路由中间件\n.use(convert(koaStatic(path.join(__dirname,'public'),{\n  pathPrefix: ''\n}))) // 静态文件指定中间件\n\n// views\napp.use(views(path.join(__dirname, '../views'), {\n  extension: 'html'\n}))\n\n// 500 error\nkoaOnError(app, {\n  template: 'views/500.html'\n})\n\n// logger\napp.use(async (ctx, next) => {\n  const start = new Date()\n  await next()\n  const ms = new Date() - start\n  console.log(`${ctx.method} ${ctx.url} - ${ms}ms`)\n})\n\napp.use(router.routes(), router.allowedMethods())\n\n// router config\nrouter.use('/', index.routes())\nrouter.use('/users', users.routes())\n\n// response router\n/*app.use(async (ctx, next) => {\n  await require('./routes').routes()(ctx, next)\n}, router.allowedMethods())*/\n\n\n\n// 404\napp.use(async (ctx) => {\n  ctx.status = 404\n  await ctx.render('404')\n})\n\n// error logger\napp.on('error', async (err, ctx) => {\n  console.log('error occured:', err)\n})\n\nconst port = parseInt('3000')\nconst server = http.createServer(app.callback())\n\nserver.listen(port)\nserver.on('error', (error) => {\n  if (error.syscall !== 'listen') {\n    throw error\n  }\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(port + ' requires elevated privileges')\n      process.exit(1)\n      break\n    case 'EADDRINUSE':\n      console.error(port + ' is already in use')\n      process.exit(1)\n      break\n    default:\n      throw error\n  }\n})\nserver.on('listening', () => {\n  console.log('Listening on port: %d', port)\n})\n\nexport default app\n"]}